import { Formatter } from 'src/utils/formatter';

export class User {
  constructor(
    public id: number = 0,
    public userType: string = '',
    public name: string = '',
    public cpf: string = '',
    public rg: string = '',
    public currentBalance: string = '0.00',
    public birthDate: string | null = null,
    public gender: string | null = null,
    public email: string = '',
    public phone: string = '',
    public fatherName: string | null = null,
    public motherName: string | null = null,
    public CCBStatus: boolean = false,
    public street: string | null = null,
    public number: string | null = null,
    public complement: string | null = null,
    public neighborhood: string | null = null,
    public city: string | null = null,
    public state: string | null = null,
    public postalCode: string | null = null,
    public status: boolean = true,
    public changePassword: boolean = false,
    public codeValidation: boolean = true,
    public deviceId: string = '',
    public acceptedTermsOfUse: boolean = false,
    public acceptedCardTerms: boolean = false,
    public latitude: number | null = null,
    public longitude: number | null = null,
    public deactivationDate: string | null = null,
    public createdAt: string = '',
    public updatedAt: string = ''
  ) {}

  static fromJson(json: any): User | undefined {
    if (!json || !json.user) return;
    return new User(
      json.user.id,
      json.user.userType,
      json.user.name,
      json.user.cpf,
      json.user.rg,
      json.user.currentBalance,
      json.user.birthDate,
      json.user.gender,
      json.user.email,
      json.user.phone,
      json.user.fatherName,
      json.user.motherName,
      json.user.CCBStatus,
      json.user.street,
      json.user.number,
      json.user.complement,
      json.user.neighborhood,
      json.user.city,
      json.user.state,
      json.user.postalCode,
      json.user.status,
      json.user.changePassword,
      json.user.codeValidation,
      json.user.deviceId,
      json.user.acceptedTermsOfUse,
      json.user.acceptedCardTerms,
      json.user.latitude,
      json.user.longitude,
      json.user.deactivationDate,
      json.user.createdAt,
      json.user.updatedAt
    );
  }

  public toJson() {
    return {
      id: this.id,
      userType: this.userType,
      name: this.name,
      cpf: Formatter.clearSymbolsAndLetters(this.cpf),
      rg: Formatter.clearSymbolsAndLetters(this.rg),
      currentBalance: this.currentBalance,
      birthDate: this.birthDate,
      gender: this.gender,
      email: this.email,
      phone: Formatter.clearSymbolsAndLetters(this.phone),
      fatherName: this.fatherName,
      motherName: this.motherName,
      CCBStatus: this.CCBStatus,
      street: this.street,
      number: this.number,
      complement: this.complement,
      neighborhood: this.neighborhood,
      city: this.city,
      state: this.state,
      postalCode: this.postalCode,
      status: this.status,
      changePassword: this.changePassword,
      codeValidation: this.codeValidation,
      deviceId: this.deviceId,
      acceptedTermsOfUse: this.acceptedTermsOfUse,
      acceptedCardTerms: this.acceptedCardTerms,
      latitude: this.latitude,
      longitude: this.longitude,
      deactivationDate: this.deactivationDate,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt
    };
  }
}
